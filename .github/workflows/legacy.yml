name: (GCC)Kernel Builder Huawei nova2

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v2
      with:
        repository: Slotheve/KernelSU-MiNote3
        path: thisRepo
    - name: Integrate KernelSU
      run: |
        
        sudo apt update && sudo apt upgrade
        sudo apt install -y git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc gzip

        mv thisRepo/* .
        rm -rf thisRepo
        sudo cp ./res/libdebuginfod.so.1 /usr/lib
        sudo chmod 777 /usr/lib/libdebuginfod.so.1

        git clone --depth=1 https://github.com/MiCode/Xiaomi_Kernel_OpenSource -b jason-n-oss jason
        mv jason source
        cd source
      
        echo "[+] Append kernel params to kprobes"
        #echo "CONFIG_KPROBES=y" >> arch/arm64/configs/jason_user_defconfig
        #echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/jason_user_defconfig
        #echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/jason_user_defconfig

        git clone https://github.com/tiann/KernelSU
        cd KernelSU
        git stash && git pull
        cd ..
        cp -r KernelSU/kernel drivers/kernelsu

        echo "[+] Add kernel su driver to Makefile"
        #echo "obj-y += kernelsu/" >> drivers/Makefile  
        echo "ccflags-y += -std=gnu11" >> drivers/kernelsu/Makefile
        echo "[+] Done."
        
        cd ..
        git clone https://github.com/Slotheve/gcc tmp
        mv tmp/gcc/ ./gcc
        rm -rf tmp
         
        export ARCH=arm64
        export CROSS_COMPILE=$(pwd)/gcc/gcc-arm64-gcc-master/bin/aarch64-elf-
        export CROSS_COMPILE_ARM32=$(pwd)/gcc/gcc-arm-gcc-master/bin/arm-eabi-
        
        cd source
        make jason_user_defconfig
        make -j2
        
        cd arch/arm64/boot
        mv Image kernel-Image
        gzip kernel-Image

    - name: Upload Build
      uses: actions/upload-artifact@v3
      with:
        name: unzip-me-then-flash-this.zip
        path: /home/runner/work/KernelSU-MiNote3/KernelSU-MiNote3/source/arch/arm64/boot/anykernel/kernel-Image.gz

